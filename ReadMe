

#Tinder Projected developed by tinega@dev


# Full-Stack Tinder Clone

This is a simple version of a Tinder app built with **ReactJS** for the frontend, using **Zustand** for state management. The backend is powered by **MongoDB**, **Cloudinary**, and **JSON Web Token (JWT)** for authentication. Passwords are securely hashed using **bcryptjs** to ensure user security. 

## Features
- **User Authentication**: JWT-based authentication for secure login and registration.
- **Password Security**: Passwords are hashed using bcryptjs to keep user credentials safe.
- **User Profile Management**: Users can create and update their profiles.
- **Image Hosting**: Cloudinary integration for image upload and storage.
- **Real-Time Experience**: Fast and seamless interactions between the user interface and backend.

## Tech Stack
- **Frontend**: ReactJS, Zustand (state management)
- **Backend**: Node.js, Express.js, MongoDB
- **Authentication**: JSON Web Token (JWT)
- **Password Hashing**: bcryptjs
- **Image Hosting**: Cloudinary

## Installation

### Prerequisites
Ensure you have **Node.js** and **npm** installed on your machine.

1. Clone the repository:
   ```bash
   git clone https://github.com/tinegachris-o/tinder-clone.git
   ```
2. Navigate to the project directory:
   ```bash
   cd tinderclone
   ```
3. Install the required dependencies:
   ```bash
   npm install
   ```

### Environment Setup
Create a `.env` file in the root directory and add the following variables:

```bash
MONGO_URI=mongodb://localhost:27017
JWT_SECRET=your_jwt_secret
CLOUDINARY_CLOUD_NAME=your_cloud_name
CLOUDINARY_API_KEY=your_api_key
CLOUDINARY_API_SECRET=your_api_secret
```

### Running the App
To run both the backend and frontend locally, open two terminals:

1. In the **backend directory**, run:
   ```bash
   npm start
   ```

2. In the **frontend directory**, run:
   ```bash
   npm run dev
   ```

## User Experience

The app is designed with a focus on simplicity and ease of use. It allows users to swipe through profiles and matches, enhancing their experience in a fun and engaging way.

![Full Stack Tinder](tibderimage.png)

## Future Improvements

- Real-time matching and messaging functionality.
- Enhanced UI/UX design for a more modern look and feel.
- Push notifications for matches and messages.

## Contributing

Feel free to open issues and submit pull requests for improvements. All contributions are welcome!


This version provides a clear, structured, and engaging overview of your project, making it easier for others to understand and contribute to it!